/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProtobufData as PrismaProtobufData } from "@prisma/client";

export class ProtobufDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProtobufDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.protobufData.count(args);
  }

  async protobufDataItems<T extends Prisma.ProtobufDataFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProtobufDataFindManyArgs>
  ): Promise<PrismaProtobufData[]> {
    return this.prisma.protobufData.findMany<Prisma.ProtobufDataFindManyArgs>(
      args
    );
  }
  async protobufData<T extends Prisma.ProtobufDataFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProtobufDataFindUniqueArgs>
  ): Promise<PrismaProtobufData | null> {
    return this.prisma.protobufData.findUnique(args);
  }
  async createProtobufData<T extends Prisma.ProtobufDataCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProtobufDataCreateArgs>
  ): Promise<PrismaProtobufData> {
    return this.prisma.protobufData.create<T>(args);
  }
  async updateProtobufData<T extends Prisma.ProtobufDataUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProtobufDataUpdateArgs>
  ): Promise<PrismaProtobufData> {
    return this.prisma.protobufData.update<T>(args);
  }
  async deleteProtobufData<T extends Prisma.ProtobufDataDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProtobufDataDeleteArgs>
  ): Promise<PrismaProtobufData> {
    return this.prisma.protobufData.delete(args);
  }
}
